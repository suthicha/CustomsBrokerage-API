{"version":3,"sources":["../src/index.js"],"names":["express","require","app","bodyParser","jwt","settings","httpMsg","user","product","company","order","set","secert","use","urlencoded","extended","json","get","req","resp","send","webPort","apiRoute","Router","post","authenticate","next","token","body","param","headers","verify","err","decoded","success","message","status","getList","params","id","add","put","update","delete","getProduct","taxno","jobno","showHome","listen","console","log"],"mappings":"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","file":"index.js","sourcesContent":["var express = require('express');\nvar app = express();\nvar bodyParser = require('body-parser');\nvar jwt = require('jsonwebtoken');\n\nvar settings = require('./settings');\nvar httpMsg = require('./core/httpMsg');\nvar user = require('./controller/user');\nvar product = require('./controller/product');\nvar company = require('./controller/company');\nvar order = require('./controller/order');\n\napp.set('secert', settings.secert);\napp.use(bodyParser.urlencoded({ extended: false }));\napp.use(bodyParser.json());\n\n// basic route (http://localhost:<port>)\napp.get('/', function(req, resp) {\n    resp.send('The API is at the http://localhost:' + settings.webPort + '/api');\n});\n\nvar apiRoute = express.Router();\napiRoute.post('/authenticate', function(req, resp) {    \n    user.authenticate(req, resp);\n});\n\n// ---------------------------------------------------------\n// route middleware to authenticate and check token\n// ---------------------------------------------------------\napiRoute.use(function(req, resp, next) {\n\n    var token = req.body.token || req.param('token') || req.headers['x-access-token'];\n\n    if (token){\n        // verifies secret and checks exp\n\t\tjwt.verify(token, app.get('secert'), function(err, decoded) {\t\t\t\n\t\t\tif (err) {\n\t\t\t\treturn resp.json({ success: false, message: 'Failed to authenticate token.' });\t\t\n\t\t\t} else {\n\t\t\t\t// if everything is good, save to request for use in other routes\n\t\t\t\treq.decoded = decoded;\t\n\t\t\t\tnext();\n\t\t\t}\n\t\t});\n    }\n    else {\n        // if there is no token\n\t\t// return an error\n\t\treturn resp.status(403).send({ \n\t\t\tsuccess: false, \n\t\t\tmessage: 'No token provided.'\n\t\t});\n    }\n});\n\n\n// ---------------------------------------------------------\n// route middleware to user api.\n// ---------------------------------------------------------\napiRoute.get('/users', function(req, resp) {\n    user.getList(req, resp);\n})\n\napiRoute.get('/users/:id', function(req, resp) {\n    user.get(req, resp, req.params.id);\n})\n\napiRoute.post('/users', function(req, resp) {\n    user.add(req, resp);\n});\n\napiRoute.put('/users', function(req, resp) {\n    user.update(req, resp);\n})\n\napiRoute.delete('/users', function(req, resp) {\n    user.delete(req, resp);\n})\n\n// ---------------------------------------------------------\n// route middleware to product api.\n// ---------------------------------------------------------\napiRoute.get('/products', function(req, resp) {\n    product.getList(req, resp);\n})\n\napiRoute.get('/products/:taxno', function(req, resp) {\n    product.getProduct(req, resp, req.params.taxno);\n})\n\napiRoute.get('/products/:taxno/:id', function(req, resp) {\n    product.get(req, resp, req.params.taxno, req.params.id);\n})\n\napiRoute.post('/products', function(req, resp) {\n    product.add(req, resp);\n})\n\napiRoute.put('/products', function(req, resp) {\n    product.update(req, resp);\n})\n\napiRoute.delete('/products', function(req, resp) {\n    product.delete(req, resp);\n})\n\n// ---------------------------------------------------------\n// route middleware to company api.\n// ---------------------------------------------------------\napiRoute.get('/company', function(req, resp) {\n    company.getList(req, resp);\n})\n\napiRoute.get('/company/:id', function(req, resp) {\n    company.get(req, resp, req.params.id);\n})\n\napiRoute.post('/company', function(req, resp) {\n    company.add(req, resp);\n})\n\napiRoute.put('/company', function(req, resp) {\n    company.update(req, resp);\n})\n\napiRoute.delete('/company', function(req, resp) {\n    company.delete(req, resp);\n})\n\n// ---------------------------------------------------------\n// route middleware to order api.\n// ---------------------------------------------------------\napiRoute.get('/orders', function(req, resp) {\n    order.getList(req, resp);\n})\n\napiRoute.get('/orders/:jobno', function(req, resp) {\n    order.get(req, resp, req.params.jobno);\n})\n\n\napiRoute.get('/', function(req, resp) {\n    httpMsg.showHome(req, resp);\n});\n\napp.use('/api', apiRoute);\napp.listen(settings.webPort);\nconsole.log('Service started at http://localhost:' + settings.webPort);\n"]}